--MfgPartCollectingList_部品取り揃え表SQL
DECLARE @WS_CD VARCHAR(10) = ''
DECLARE @JOB_ORDER_NO VARCHAR(10) = 'J101200261'
DECLARE @SCH_START_DATE INT = 0
DECLARE @DEMAND_NO VARCHAR(10)='G000013942'

--ダミー品は含まれない
--Get_MfgPartCollectingList Main
SELECT
		JO.ORDER_NO,
		JO.JOC_CD,
		JO.PRODUCT_NO,
		JO.PRODUCT_NM,
		JO.MPS_QTY,
		JO.JOB_ORDER_NO,
		JO.PARENT_ITEM_NO,
		JO.PARENT_ITEM_DESC,
		JO.ORDER_QTY,
		JO.WS_CD,
		JO.WS_DESC,
		JO.LT_TYPE,
		JO.LT_TYPE_NM,
		JO.LT,
		JO.SCH_START_DATE,
		JO.SCH_COMPL_DATE,

		D.DEMAND_NO,
		D.PART_SEQ,
		'' DUMMY_FLAG,
		D.ITEM_NO,
		IM.ITEM_DESC,
		IM.SPEC_DESC,
		D.USAGE_DEC,
		S.DATA_CHAR ITEM_UMSR,
		D.SUB_GRP_CD,
		D.PLAN_QTY,
		(ISNULL(WIP0.ALLOC_QTY,0) +ISNULL(WIP1.ALLOC_QTY,0) + ISNULL(WIP2.ALLOC_QTY,0)) WIP_ALLOC_QTY,  
		D.PLAN_QTY-(ISNULL(WIP0.ALLOC_QTY,0)+ISNULL(WIP1.ALLOC_QTY,0) + ISNULL(WIP2.ALLOC_QTY,0)) STOCK_QTY,
		ISNULL(WIP0.ALLOC_QTY,0) WHS_ALLOC_QTY,
		ISNULL(WIP1.ALLOC_QTY,0) WS_ALLOC_QTY,
		ISNULL(WIP2.ALLOC_QTY,0) PLAN_ALLOC_QTY,
		IM.DRAWING_NO
FROM (
		SELECT
			JO.ORDER_NO,
			JO.JOC_CD,
			PP.ITEM_NO PRODUCT_NO,
			IM.ITEM_DESC PRODUCT_NM,
			PP.MPS_QTY,
			JO.JOB_ORDER_NO,
			JO.ITEM_NO PARENT_ITEM_NO,
			JO.ITEM_DESC PARENT_ITEM_DESC,
			JO.ORDER_QTY,
			JO.WS_CD,
			WM.WS_DESC,
			RO.LT_TYPE,
			CASE ISNULL(RO.LT_TYPE,-1) WHEN -1 THEN '' WHEN 0 THEN '固定LT' ELSE '変動LT' END LT_TYPE_NM,
			CASE ISNULL(RO.LT_TYPE,-1) WHEN -1 THEN '' WHEN 0 THEN CONVERT(nvarchar,RO.MFG_LT)+'日' ELSE REPLACE(CONVERT(nvarchar,CONVERT(money, RO.DAILY_PROD_QTY), 1), '.00', '') + '台/日' END LT,
			JO.SCH_START_DATE,
			JO.SCH_COMPL_DATE
			FROM	JOB_ORDER JO
			LEFT JOIN (SELECT P.ITEM_NO, P.JOC_CD, SUM(P.MPS_QTY) MPS_QTY
					FROM PRODUCTION_PLAN P
					GROUP BY P.ITEM_NO, P.JOC_CD )	PP
			ON JO.JOC_CD = PP.JOC_CD
			LEFT JOIN	ITEM_MASTER IM ON PP.ITEM_NO = IM.ITEM_NO
			LEFT JOIN	WORKSHOP_MASTER WM ON JO.WS_CD = WM.WS_CD
			LEFT JOIN	(SELECT R.ITEM_NO, R.WS_CD, R.BEG_EFF_DATE, R.END_EFF_DATE,
							R.LT_TYPE, R.MFG_LT, R.DAILY_PROD_QTY
							FROM ROUTINE_MASTER R
							INNER JOIN (SELECT ITEM_NO, WS_CD, MIN(ROUTINE_SEQ) ROUTINE_SEQ	
										FROM ROUTINE_MASTER
										GROUP BY ITEM_NO, WS_CD) R1
							ON R.ITEM_NO = R1.ITEM_NO AND R.WS_CD = R1.WS_CD
							AND R.ROUTINE_SEQ = R1.ROUTINE_SEQ) RO
			ON JO.ITEM_NO = RO.ITEM_NO AND JO.WS_CD = RO.WS_CD
				AND JO.SCH_START_DATE >= RO.BEG_EFF_DATE
				AND JO.SCH_START_DATE <= RO.END_EFF_DATE
			WHERE	JO.ORDER_STATUS >=  10
			AND		JO.ORDER_STATUS <  85
			AND    (JO.WS_CD = @WS_CD or @WS_CD = '')
			AND    (JO.JOB_ORDER_NO = @JOB_ORDER_NO or @JOB_ORDER_NO = '')
			AND    (JO.SCH_START_DATE <= @SCH_START_DATE or @SCH_START_DATE = 0)
		) JO
LEFT JOIN DEMAND D ON JO.ORDER_NO = D.ORDER_NO
LEFT JOIN ITEM_MASTER IM ON D.ITEM_NO = IM.ITEM_NO
LEFT JOIN SYSTEM_PARAMETER S ON S.KEY01='ITEM_UMSR' AND S.KEY02 = IM.ITEM_UMSR
LEFT JOIN (	SELECT DEMAND_NO, SUM(ALLOC_QTY) ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO = F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO)	WIP0
		ON D.DEMAND_NO = WIP0.DEMAND_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(CASE WHEN ALLOC_STATUS = 20 THEN ACT_QTY ELSE ALLOC_QTY END) ALLOC_QTY 
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS <= 20
				AND SCH_FLAG IN (0, 2)
				GROUP BY DEMAND_NO)	WIP1
		ON D.DEMAND_NO = WIP1.DEMAND_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(ALLOC_QTY) ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO<>F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO)	WIP2
		ON D.DEMAND_NO = WIP2.DEMAND_NO
WHERE 1=1
  AND (D.SUB_GRP_CD = '' OR (D.SUB_GRP_CD <> '' AND D.SUB_ACTION_FLAG = 1))
  AND  D.ITEM_TYPE <> '99'
ORDER BY JO.JOB_ORDER_NO, JO.PARENT_ITEM_NO, D.PART_SEQ

--Get_MfgPartCollectingList Sub

SELECT
		D.DEMAND_NO,
		D.PART_SEQ,
		isnull(A.alloc_type,0) ALLOC_TYPE,
		CASE isnull(A.alloc_type,0) 
			WHEN 0 THEN 'A:' 
			WHEN 1 THEN 'B:' 
			WHEN 2 THEN 'C:'
			ELSE '' END SUM_ALLOC_SYMBOL,
		CASE isnull(A.alloc_type,0) 
			WHEN 0 THEN ISNULL(WIP0.WHS_ALLOC_QTY,0)
			WHEN 1 THEN ISNULL(WIP1.WS_ALLOC_QTY,0) 
			WHEN 2 THEN ISNULL(WIP2.PLAN_ALLOC_QTY,0)
			ELSE 0 END SUM_ALLOC_QTY,
		A.LOT_NO,
		A.ALLOC_QTY Detail_ALLOC_QTY
FROM DEMAND D 
LEFT JOIN (	SELECT DEMAND_NO, SUM(ALLOC_QTY) WHS_ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO = F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO)	WIP0
		ON D.DEMAND_NO = WIP0.DEMAND_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(CASE WHEN ALLOC_STATUS = 20 THEN ACT_QTY ELSE ALLOC_QTY END) WS_ALLOC_QTY 
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS <= 20
				AND SCH_FLAG IN (0, 2)
				GROUP BY DEMAND_NO)	WIP1
		ON D.DEMAND_NO = WIP1.DEMAND_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(ALLOC_QTY) PLAN_ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO<>F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO)	WIP2
		ON D.DEMAND_NO = WIP2.DEMAND_NO
LEFT join (
		    SELECT 0 alloc_type,DEMAND_NO, LOT_NO, SUM(ALLOC_QTY) ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO = F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO, LOT_NO
			UNION ALL
			SELECT 1 alloc_type,DEMAND_NO, LOT_NO, SUM(CASE WHEN ALLOC_STATUS = 20 THEN ACT_QTY ELSE ALLOC_QTY END)	ALLOC_QTY 
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS <= 20
				AND SCH_FLAG IN (0,2)
				GROUP BY DEMAND_NO, LOT_NO
			UNION ALL
			SELECT 2 alloc_type,DEMAND_NO, LOT_NO, SUM(ALLOC_QTY) ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO <> F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO, LOT_NO
	) A ON D.DEMAND_NO=A.DEMAND_NO
WHERE 1=1
  AND (D.SUB_GRP_CD = '' OR (D.SUB_GRP_CD <> '' AND D.SUB_ACTION_FLAG = 1))
  AND  D.ITEM_TYPE <> '99'
  AND D.DEMAND_NO = @DEMAND_NO
ORDER BY D.DEMAND_NO, A.ALLOC_TYPE

/*
SELECT
		D.DEMAND_NO,
		D.PART_SEQ,
		isnull(A.alloc_type,0) ALLOC_TYPE,
		CASE isnull(A.alloc_type,0) 
			WHEN 0 THEN 'A:' 
			WHEN 1 THEN 'B:' 
			WHEN 2 THEN 'C:'
			ELSE '' END SUM_ALLOC_SYMBOL,
		CASE isnull(A.alloc_type,0) 
			WHEN 0 THEN ISNULL(WIP0.WHS_ALLOC_QTY,0)
			WHEN 1 THEN ISNULL(WIP1.WS_ALLOC_QTY,0) 
			WHEN 2 THEN ISNULL(WIP2.PLAN_ALLOC_QTY,0)
			ELSE 0 END SUM_ALLOC_QTY,
		A.LOT_NO,
		A.ALLOC_QTY Detail_ALLOC_QTY
FROM (
		SELECT
			JO.ORDER_NO,
			JO.JOC_CD,
			PP.ITEM_NO PRODUCT_NO,
			IM.ITEM_DESC PRODUCT_NM,
			PP.MPS_QTY,
			JO.JOB_ORDER_NO,
			JO.ITEM_NO PARENT_ITEM_NO,
			JO.ITEM_DESC PARENT_ITEM_DESC,
			JO.ORDER_QTY,
			JO.WS_CD,
			WM.WS_DESC,
			RO.LT_TYPE,
			CASE ISNULL(RO.LT_TYPE,-1) WHEN -1 THEN '' WHEN 0 THEN '固定LT' ELSE '変動LT' END LT_TYPE_NM,
			CASE ISNULL(RO.LT_TYPE,-1) WHEN -1 THEN '' WHEN 0 THEN CONVERT(nvarchar,RO.MFG_LT)+'日' ELSE REPLACE(CONVERT(nvarchar,CONVERT(money, RO.DAILY_PROD_QTY), 1), '.00', '') + '台/日' END LT,
			JO.SCH_START_DATE,
			JO.SCH_COMPL_DATE
			FROM	JOB_ORDER JO
			LEFT JOIN (SELECT P.ITEM_NO, P.JOC_CD, SUM(P.MPS_QTY) MPS_QTY
					FROM PRODUCTION_PLAN P
					GROUP BY P.ITEM_NO, P.JOC_CD )	PP
			ON JO.JOC_CD = PP.JOC_CD
			LEFT JOIN	ITEM_MASTER IM ON PP.ITEM_NO = IM.ITEM_NO
			LEFT JOIN	WORKSHOP_MASTER WM ON JO.WS_CD = WM.WS_CD
			LEFT JOIN	(SELECT R.ITEM_NO, R.WS_CD, R.BEG_EFF_DATE, R.END_EFF_DATE,
							R.LT_TYPE, R.MFG_LT, R.DAILY_PROD_QTY
							FROM ROUTINE_MASTER R
							INNER JOIN (SELECT ITEM_NO, WS_CD, MIN(ROUTINE_SEQ) ROUTINE_SEQ	
										FROM ROUTINE_MASTER
										GROUP BY ITEM_NO, WS_CD) R1
							ON R.ITEM_NO = R1.ITEM_NO AND R.WS_CD = R1.WS_CD
							AND R.ROUTINE_SEQ = R1.ROUTINE_SEQ) RO
			ON JO.ITEM_NO = RO.ITEM_NO AND JO.WS_CD = RO.WS_CD
				AND JO.SCH_START_DATE >= RO.BEG_EFF_DATE
				AND JO.SCH_START_DATE <= RO.END_EFF_DATE
			WHERE	JO.ORDER_STATUS >=  10
			AND		JO.ORDER_STATUS <  85
			AND    (JO.WS_CD = @WS_CD or @WS_CD = '')
			AND    (JO.JOB_ORDER_NO = @JOB_ORDER_NO or @JOB_ORDER_NO = '')
			AND    (JO.SCH_START_DATE <= @SCH_START_DATE or @SCH_START_DATE = 0)
		) JO
LEFT JOIN DEMAND D ON JO.ORDER_NO = D.ORDER_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(ALLOC_QTY) WHS_ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO = F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO)	WIP0
		ON D.DEMAND_NO = WIP0.DEMAND_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(CASE WHEN ALLOC_STATUS = 20 THEN ACT_QTY ELSE ALLOC_QTY END) WS_ALLOC_QTY 
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS <= 20
				AND SCH_FLAG IN (0, 2)
				GROUP BY DEMAND_NO)	WIP1
		ON D.DEMAND_NO = WIP1.DEMAND_NO
LEFT JOIN (	SELECT DEMAND_NO, SUM(ALLOC_QTY) PLAN_ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO<>F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO)	WIP2
		ON D.DEMAND_NO = WIP2.DEMAND_NO
LEFT join (
		    SELECT 0 alloc_type,DEMAND_NO, LOT_NO, SUM(ALLOC_QTY) ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO = F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO, LOT_NO
			UNION ALL
			SELECT 1 alloc_type,DEMAND_NO, LOT_NO, SUM(CASE WHEN ALLOC_STATUS = 20 THEN ACT_QTY ELSE ALLOC_QTY END)	ALLOC_QTY 
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS <= 20
				AND SCH_FLAG IN (0,2)
				GROUP BY DEMAND_NO, LOT_NO
			UNION ALL
			SELECT 2 alloc_type,DEMAND_NO, LOT_NO, SUM(ALLOC_QTY) ALLOC_QTY
				FROM WIP_ALLOC
				WHERE ALLOC_STATUS = 0
				AND DEMAND_NO <> F_DEMAND_NO
				AND SCH_FLAG IN (1)
				GROUP BY DEMAND_NO, LOT_NO
	) A ON D.DEMAND_NO=A.DEMAND_NO
WHERE 1=1
  AND (D.SUB_GRP_CD = '' OR (D.SUB_GRP_CD <> '' AND D.SUB_ACTION_FLAG = 1))
  AND  D.ITEM_TYPE <> '99'
*/